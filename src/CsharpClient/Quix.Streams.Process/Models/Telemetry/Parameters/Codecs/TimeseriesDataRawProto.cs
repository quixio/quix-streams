// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TimeseriesDataRawProto.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Quix.Streams.Process.Models.Codecs {

  /// <summary>Holder for reflection information generated from TimeseriesDataRawProto.proto</summary>
  public static partial class TimeseriesDataRawProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for TimeseriesDataRawProto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TimeseriesDataRawProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtwYXJhbWV0ZXJEYXRhUmF3UHJvdG8ucHJvdG8SCHR1dG9yaWFsIo4EChVQ",
            "YXJhbWV0ZXJEYXRhUmF3UHJvdG8SDQoFZXBvY2gYASABKAMSEgoKdGltZXN0",
            "YW1wcxgCIAMoAxJFCg5udW1lcmljX3ZhbHVlcxgDIAMoCzItLnR1dG9yaWFs",
            "LlBhcmFtZXRlckRhdGFSYXdQcm90by5OdW1lcmljVmFsdWVzEkMKDXN0cmlu",
            "Z192YWx1ZXMYBCADKAsyLC50dXRvcmlhbC5QYXJhbWV0ZXJEYXRhUmF3UHJv",
            "dG8uU3RyaW5nVmFsdWVzEkMKDWJpbmFyeV92YWx1ZXMYBSADKAsyLC50dXRv",
            "cmlhbC5QYXJhbWV0ZXJEYXRhUmF3UHJvdG8uQmluYXJ5VmFsdWVzEkAKCnRh",
            "Z192YWx1ZXMYBiADKAsyLC50dXRvcmlhbC5QYXJhbWV0ZXJEYXRhUmF3UHJv",
            "dG8uU3RyaW5nVmFsdWVzGj8KDU51bWVyaWNWYWx1ZXMSDgoGaGVhZGVyGAEg",
            "ASgJEg4KBmlzbnVsbBgCIAMoCBIOCgZ2YWx1ZXMYAyADKAEaPgoMU3RyaW5n",
            "VmFsdWVzEg4KBmhlYWRlchgBIAEoCRIOCgZpc251bGwYAiADKAgSDgoGdmFs",
            "dWVzGAMgAygJGj4KDEJpbmFyeVZhbHVlcxIOCgZoZWFkZXIYASABKAkSDgoG",
            "aXNudWxsGAIgAygIEg4KBnZhbHVlcxgDIAMoDEIhqgIeUXVpeC5TZGsuUHJv",
            "Y2Vzcy5Nb2RlbHMuQ29kZWNzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto), global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Parser, new[]{ "Epoch", "Timestamps", "NumericValues", "StringValues", "BinaryValues", "TagValues" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues), global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues.Parser, new[]{ "Header", "Isnull", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues), global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues.Parser, new[]{ "Header", "Isnull", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues), global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues.Parser, new[]{ "Header", "Isnull", "Values" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TimeseriesDataRawProto : pb::IMessage<TimeseriesDataRawProto> {
    private static readonly pb::MessageParser<TimeseriesDataRawProto> _parser = new pb::MessageParser<TimeseriesDataRawProto>(() => new TimeseriesDataRawProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeseriesDataRawProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeseriesDataRawProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeseriesDataRawProto(TimeseriesDataRawProto other) : this() {
      epoch_ = other.epoch_;
      timestamps_ = other.timestamps_.Clone();
      numericValues_ = other.numericValues_.Clone();
      stringValues_ = other.stringValues_.Clone();
      binaryValues_ = other.binaryValues_.Clone();
      tagValues_ = other.tagValues_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeseriesDataRawProto Clone() {
      return new TimeseriesDataRawProto(this);
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 1;
    private long epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    /// <summary>Field number for the "timestamps" field.</summary>
    public const int TimestampsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_timestamps_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> timestamps_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Timestamps {
      get { return timestamps_; }
    }

    /// <summary>Field number for the "numeric_values" field.</summary>
    public const int NumericValuesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues> _repeated_numericValues_codec
        = pb::FieldCodec.ForMessage(26, global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues.Parser);
    private readonly pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues> numericValues_ = new pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.NumericValues> NumericValues {
      get { return numericValues_; }
    }

    /// <summary>Field number for the "string_values" field.</summary>
    public const int StringValuesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues> _repeated_stringValues_codec
        = pb::FieldCodec.ForMessage(34, global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues.Parser);
    private readonly pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues> stringValues_ = new pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues> StringValues {
      get { return stringValues_; }
    }

    /// <summary>Field number for the "binary_values" field.</summary>
    public const int BinaryValuesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues> _repeated_binaryValues_codec
        = pb::FieldCodec.ForMessage(42, global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues.Parser);
    private readonly pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues> binaryValues_ = new pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.BinaryValues> BinaryValues {
      get { return binaryValues_; }
    }

    /// <summary>Field number for the "tag_values" field.</summary>
    public const int TagValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues> _repeated_tagValues_codec
        = pb::FieldCodec.ForMessage(50, global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues.Parser);
    private readonly pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues> tagValues_ = new pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Types.StringValues> TagValues {
      get { return tagValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeseriesDataRawProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeseriesDataRawProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Epoch != other.Epoch) return false;
      if(!timestamps_.Equals(other.timestamps_)) return false;
      if(!numericValues_.Equals(other.numericValues_)) return false;
      if(!stringValues_.Equals(other.stringValues_)) return false;
      if(!binaryValues_.Equals(other.binaryValues_)) return false;
      if(!tagValues_.Equals(other.tagValues_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Epoch != 0L) hash ^= Epoch.GetHashCode();
      hash ^= timestamps_.GetHashCode();
      hash ^= numericValues_.GetHashCode();
      hash ^= stringValues_.GetHashCode();
      hash ^= binaryValues_.GetHashCode();
      hash ^= tagValues_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Epoch != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Epoch);
      }
      timestamps_.WriteTo(output, _repeated_timestamps_codec);
      numericValues_.WriteTo(output, _repeated_numericValues_codec);
      stringValues_.WriteTo(output, _repeated_stringValues_codec);
      binaryValues_.WriteTo(output, _repeated_binaryValues_codec);
      tagValues_.WriteTo(output, _repeated_tagValues_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Epoch != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Epoch);
      }
      size += timestamps_.CalculateSize(_repeated_timestamps_codec);
      size += numericValues_.CalculateSize(_repeated_numericValues_codec);
      size += stringValues_.CalculateSize(_repeated_stringValues_codec);
      size += binaryValues_.CalculateSize(_repeated_binaryValues_codec);
      size += tagValues_.CalculateSize(_repeated_tagValues_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeseriesDataRawProto other) {
      if (other == null) {
        return;
      }
      if (other.Epoch != 0L) {
        Epoch = other.Epoch;
      }
      timestamps_.Add(other.timestamps_);
      numericValues_.Add(other.numericValues_);
      stringValues_.Add(other.stringValues_);
      binaryValues_.Add(other.binaryValues_);
      tagValues_.Add(other.tagValues_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Epoch = input.ReadInt64();
            break;
          }
          case 18:
          case 16: {
            timestamps_.AddEntriesFrom(input, _repeated_timestamps_codec);
            break;
          }
          case 26: {
            numericValues_.AddEntriesFrom(input, _repeated_numericValues_codec);
            break;
          }
          case 34: {
            stringValues_.AddEntriesFrom(input, _repeated_stringValues_codec);
            break;
          }
          case 42: {
            binaryValues_.AddEntriesFrom(input, _repeated_binaryValues_codec);
            break;
          }
          case 50: {
            tagValues_.AddEntriesFrom(input, _repeated_tagValues_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TimeseriesDataRawProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NumericValues : pb::IMessage<NumericValues> {
        private static readonly pb::MessageParser<NumericValues> _parser = new pb::MessageParser<NumericValues>(() => new NumericValues());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NumericValues> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericValues() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericValues(NumericValues other) : this() {
          header_ = other.header_;
          isnull_ = other.isnull_.Clone();
          values_ = other.values_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericValues Clone() {
          return new NumericValues(this);
        }

        /// <summary>Field number for the "header" field.</summary>
        public const int HeaderFieldNumber = 1;
        private string header_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Header {
          get { return header_; }
          set {
            header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isnull" field.</summary>
        public const int IsnullFieldNumber = 2;
        private static readonly pb::FieldCodec<bool> _repeated_isnull_codec
            = pb::FieldCodec.ForBool(18);
        private readonly pbc::RepeatedField<bool> isnull_ = new pbc::RepeatedField<bool>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<bool> Isnull {
          get { return isnull_; }
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 3;
        private static readonly pb::FieldCodec<double> _repeated_values_codec
            = pb::FieldCodec.ForDouble(26);
        private readonly pbc::RepeatedField<double> values_ = new pbc::RepeatedField<double>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<double> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NumericValues);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NumericValues other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Header != other.Header) return false;
          if(!isnull_.Equals(other.isnull_)) return false;
          if(!values_.Equals(other.values_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Header.Length != 0) hash ^= Header.GetHashCode();
          hash ^= isnull_.GetHashCode();
          hash ^= values_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Header.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Header);
          }
          isnull_.WriteTo(output, _repeated_isnull_codec);
          values_.WriteTo(output, _repeated_values_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Header.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
          }
          size += isnull_.CalculateSize(_repeated_isnull_codec);
          size += values_.CalculateSize(_repeated_values_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NumericValues other) {
          if (other == null) {
            return;
          }
          if (other.Header.Length != 0) {
            Header = other.Header;
          }
          isnull_.Add(other.isnull_);
          values_.Add(other.values_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Header = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                isnull_.AddEntriesFrom(input, _repeated_isnull_codec);
                break;
              }
              case 26:
              case 25: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class StringValues : pb::IMessage<StringValues> {
        private static readonly pb::MessageParser<StringValues> _parser = new pb::MessageParser<StringValues>(() => new StringValues());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StringValues> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringValues() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringValues(StringValues other) : this() {
          header_ = other.header_;
          isnull_ = other.isnull_.Clone();
          values_ = other.values_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringValues Clone() {
          return new StringValues(this);
        }

        /// <summary>Field number for the "header" field.</summary>
        public const int HeaderFieldNumber = 1;
        private string header_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Header {
          get { return header_; }
          set {
            header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isnull" field.</summary>
        public const int IsnullFieldNumber = 2;
        private static readonly pb::FieldCodec<bool> _repeated_isnull_codec
            = pb::FieldCodec.ForBool(18);
        private readonly pbc::RepeatedField<bool> isnull_ = new pbc::RepeatedField<bool>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<bool> Isnull {
          get { return isnull_; }
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_values_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StringValues);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StringValues other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Header != other.Header) return false;
          if(!isnull_.Equals(other.isnull_)) return false;
          if(!values_.Equals(other.values_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Header.Length != 0) hash ^= Header.GetHashCode();
          hash ^= isnull_.GetHashCode();
          hash ^= values_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Header.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Header);
          }
          isnull_.WriteTo(output, _repeated_isnull_codec);
          values_.WriteTo(output, _repeated_values_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Header.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
          }
          size += isnull_.CalculateSize(_repeated_isnull_codec);
          size += values_.CalculateSize(_repeated_values_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StringValues other) {
          if (other == null) {
            return;
          }
          if (other.Header.Length != 0) {
            Header = other.Header;
          }
          isnull_.Add(other.isnull_);
          values_.Add(other.values_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Header = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                isnull_.AddEntriesFrom(input, _repeated_isnull_codec);
                break;
              }
              case 26: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class BinaryValues : pb::IMessage<BinaryValues> {
        private static readonly pb::MessageParser<BinaryValues> _parser = new pb::MessageParser<BinaryValues>(() => new BinaryValues());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BinaryValues> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Quix.Streams.Process.Models.Codecs.TimeseriesDataRawProto.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BinaryValues() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BinaryValues(BinaryValues other) : this() {
          header_ = other.header_;
          isnull_ = other.isnull_.Clone();
          values_ = other.values_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BinaryValues Clone() {
          return new BinaryValues(this);
        }

        /// <summary>Field number for the "header" field.</summary>
        public const int HeaderFieldNumber = 1;
        private string header_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Header {
          get { return header_; }
          set {
            header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isnull" field.</summary>
        public const int IsnullFieldNumber = 2;
        private static readonly pb::FieldCodec<bool> _repeated_isnull_codec
            = pb::FieldCodec.ForBool(18);
        private readonly pbc::RepeatedField<bool> isnull_ = new pbc::RepeatedField<bool>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<bool> Isnull {
          get { return isnull_; }
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 3;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_values_codec
            = pb::FieldCodec.ForBytes(26);
        private readonly pbc::RepeatedField<pb::ByteString> values_ = new pbc::RepeatedField<pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<pb::ByteString> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BinaryValues);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BinaryValues other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Header != other.Header) return false;
          if(!isnull_.Equals(other.isnull_)) return false;
          if(!values_.Equals(other.values_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Header.Length != 0) hash ^= Header.GetHashCode();
          hash ^= isnull_.GetHashCode();
          hash ^= values_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Header.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Header);
          }
          isnull_.WriteTo(output, _repeated_isnull_codec);
          values_.WriteTo(output, _repeated_values_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Header.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
          }
          size += isnull_.CalculateSize(_repeated_isnull_codec);
          size += values_.CalculateSize(_repeated_values_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BinaryValues other) {
          if (other == null) {
            return;
          }
          if (other.Header.Length != 0) {
            Header = other.Header;
          }
          isnull_.Add(other.isnull_);
          values_.Add(other.values_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Header = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                isnull_.AddEntriesFrom(input, _repeated_isnull_codec);
                break;
              }
              case 26: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
