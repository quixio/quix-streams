[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "quixstreams"
dynamic = ["version", "dependencies"]
description = "Python library for building stream processing applications with Apache Kafka"
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.9, <4"
keywords = ["streaming", "processing", "pipeline", "event", "real-time", "time series", "DataFrame", "Kafka", "Quix"]
authors = [
    { name = "Quix Analytics Ltd", email = "devs@quix.io" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
]

[project.urls]
Homepage = "https://github.com/quixio/quix-streams"

[project.optional-dependencies]
all = [
    "fastavro>=1.8,<2.0",
    "protobuf>=5.27.2,<6.0",
    "influxdb3-python>=0.7,<1.0",
    "pyiceberg[pyarrow,glue]>=0.7,<0.8",
    "google-cloud-pubsub>=2.23.1,<3",
]

avro = ["fastavro>=1.8,<2.0"]
protobuf = ["protobuf>=5.27.2,<6.0"]
influxdb3 = ["influxdb3-python>=0.7,<1.0"]
iceberg = ["pyiceberg[pyarrow]>=0.7,<0.8"]
iceberg_aws = ["pyiceberg[pyarrow,glue]>=0.7,<0.8"]
pubsub = ["google-cloud-pubsub>=2.23.1,<3"]

[tool.setuptools.packages.find]
include = ["quixstreams*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
version = {attr = "quixstreams.__version__"}

# This enables the pydantic pycharm plugin to suggest field names correctly
[tool.pydantic-pycharm-plugin]
ignore-init-method-arguments = true

[tool.ruff]
fix = true
lint.select = [
  "F",  # Pyflakes
  "I",  # isort
  "S",  # flake8-bandit
  "SLF",  # flake8-self
]
exclude = [
  "*_pb2.py",  # Protobuf files
]

[tool.ruff.lint.per-file-ignores]
# S101 Use of `assert` detected
# S105 Possible hardcoded password assigned to variable
# S106 Possible hardcoded password assigned to argument
# S311 Standard pseudo-random generators are not suitable for cryptographic purposes
# SLF001 Private member accessed
"docs/*.py" = ["S311"]
"examples/*.py" = ["S311"]
"tests/*.py" = ["S101", "S105", "S106", "S311", "SLF001"]

[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = [
  "ignore::Warning:confluent_kafka.schema_registry.*",
]
# Ignore manual tests by and some loggers by default
addopts = "--log-disable=urllib3.connectionpool --log-disable=parso --log-disable=docker --log-disable=asyncio"
# Print debug logs to the console in tests
log_cli = true
log_cli_level = "INFO"
log_cli_format = "[%(levelname)s] %(name)s: %(message)s"
# Custom markers
markers = ["timeit"]
